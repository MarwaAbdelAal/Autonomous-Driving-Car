{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { RCTAnimation } from \"react-native-web/dist/index\";\nimport { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function AutoMode() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      sec = _useState2[0],\n      setSec = _useState2[1];\n\n  var refresh = setInterval(function () {\n    setSec(sec += 1);\n  }, 1000);\n\n  var send_mode = function send_mode(mode) {\n    var response;\n    return _regeneratorRuntime.async(function send_mode$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(mode == \"Automatic\")) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('http://172.17.255.255:8090/video_feed', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                mode: mode,\n                direction: \"none\"\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n\n          case 5:\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    send_mode(\"Automatic\"), [sec];\n  });\n  useEffect(function () {\n    return function () {\n      clearInterval(refresh);\n    };\n  });\n\n  var backAction = function backAction() {\n    console.log(\"back\");\n    Alert.alert(\"Hold on! Are you sure you want to go back?\");\n  };\n\n  var backHandler = BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n  return _jsx(Text, {\n    style: styles.container,\n    children: \"Open IP webcam App to begin Capturing images\"\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 30\n  }\n});","map":{"version":3,"sources":["/mnt/data/Engineering/SBME/4th_year/2nd_semester/iot/tasks/task2/react/Components/AutoMode.js"],"names":["React","RCTAnimation","useEffect","useState","AutoMode","sec","setSec","refresh","setInterval","send_mode","mode","fetch","method","headers","Accept","body","JSON","stringify","direction","response","console","error","clearInterval","backAction","log","Alert","alert","backHandler","BackHandler","addEventListener","styles","container","StyleSheet","create","flex","display","justifyContent","alignItems","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;SAEwCC,Y;AACxC,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAGA,eAAe,SAASC,QAAT,GAAoB;AACjC,kBAAiBD,QAAQ,CAAC,CAAD,CAAzB;AAAA;AAAA,MAAKE,GAAL;AAAA,MAASC,MAAT;;AAEA,MAAIC,OAAO,GAACC,WAAW,CAAC,YAAM;AAC5BF,IAAAA,MAAM,CAACD,GAAG,IAAE,CAAN,CAAN;AACD,GAFsB,EAEpB,IAFoB,CAAvB;;AAIA,MAAMI,SAAS,GAAE,SAAXA,SAAW,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEVA,IAAI,IAAE,WAFI;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGQC,KAAK,CAAC,uCAAD,EAC1B;AAAEC,cAAAA,MAAM,EAAE,MAAV;AAAkBC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,MAAM,EAAE,kBAAV;AAA6B,gCAAgB;AAA7C,eAA3B;AAA4FC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,gBAAAA,IAAI,EAACA,IAAN;AAAaQ,gBAAAA,SAAS,EAAC;AAAvB,eAAf;AAAlG,aAD0B,CAHb;;AAAA;AAGTC,YAAAA,QAHS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASFC,YAAAA,OAAO,CAACC,KAAR;;AATE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAUEnB,EAAAA,SAAS,CAAC,YAAI;AAACO,IAAAA,SAAS,CAAC,WAAD,CAAT,EAAuB,CAACJ,GAAD,CAAvB;AAA6B,GAAnC,CAAT;AACAH,EAAAA,SAAS,CAAC,YAAI;AAAC,WAAM,YAAI;AACvBoB,MAAAA,aAAa,CAACf,OAAD,CAAb;AACD,KAFc;AAEb,GAFO,CAAT;;AAIA,MAAMgB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBH,IAAAA,OAAO,CAACI,GAAR,CAAY,MAAZ;AACAC,IAAAA,KAAK,CAACC,KAAN,CAAY,4CAAZ;AACD,GAHD;;AAKA,MAAMC,WAAW,GAAGC,WAAW,CAACC,gBAAZ,CAClB,mBADkB,EAElBN,UAFkB,CAApB;AAKF,SAGE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA,IAHF;AAKD;AAGD,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAE7BF,EAAAA,SAAS,EACT;AACIG,IAAAA,IAAI,EAAC,CADT;AAEIC,IAAAA,OAAO,EAAC,MAFZ;AAGIC,IAAAA,cAAc,EAAC,QAHnB;AAIIC,IAAAA,UAAU,EAAC,QAJf;AAKIC,IAAAA,QAAQ,EAAC;AALb;AAH6B,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { View,Text } from 'react-native';\r\nimport { StyleSheet ,BackHandler,Alert ,RCTAnimation} from 'react-native';\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function AutoMode() {\r\n  let [sec,setSec]=useState(0)\r\n\r\n  var refresh=setInterval(() => {\r\n    setSec(sec+=1)\r\n  }, 1000);\r\n\r\n  const send_mode= async(mode)=>{\r\n    try{\r\n      if(mode==\"Automatic\"){\r\n      let response = await fetch('http://172.17.255.255:8090/video_feed', \r\n      { method: 'POST', headers: { Accept: 'application/json','Content-Type': 'application/json'},body: JSON.stringify({mode:mode , direction:\"none\"})\r\n     \r\n     });\r\n    }\r\n  }\r\n    catch(error){console.error(error)}}\r\n    useEffect(()=>{send_mode(\"Automatic\"),[sec]})\r\n    useEffect(()=>{return()=>{\r\n      clearInterval(refresh)\r\n    }})\r\n\r\n    const backAction = () => {\r\n      console.log(\"back\")\r\n      Alert.alert(\"Hold on! Are you sure you want to go back?\")\r\n    };\r\n\r\n    const backHandler = BackHandler.addEventListener(\r\n      \"hardwareBackPress\",\r\n      backAction\r\n    );\r\n\r\n  return (\r\n\r\n\r\n    <Text style={styles.container}>Open IP webcam App to begin Capturing images</Text>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    container:\r\n    {\r\n        flex:1,\r\n        display:\"flex\",\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        fontSize:30\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}